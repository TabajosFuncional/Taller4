[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\santy\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\santy\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 19)
[debug]       Load.loadUnit: plugins took 105.585ms
[debug]       Load.loadUnit: defsScala took 0.2372ms
[debug] [Loading] Scanning directory C:\Users\santy\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\santy\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.9066 ms
[debug]           Load.resolveProject(global-plugins) took 33.3192ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\santy\.sbt\1.0\plugins, plugins: List(<none>))) took 62.7135ms
[debug] [Loading] Done in C:\Users\santy\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 87.7775ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2273ms
[debug]     Load.loadUnit(file:/C:/Users/santy/.sbt/1.0/plugins/, ...) took 203.1094ms
[debug]   Load.apply: load took 335.0006ms
[debug]   Load.apply: resolveProjects took 5.3288ms
[debug]   Load.apply: finalTransforms took 49.947ms
[debug]   Load.apply: config.delegates took 6.2864ms
[debug]   Load.apply: Def.make(settings)... took 290.3925ms
[debug]   Load.apply: structureIndex took 88.3145ms
[debug]   Load.apply: mkStreams took 2.0682ms
[info] loading global plugins from C:\Users\santy\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1675.9385ms
[debug]           Load.loadUnit: plugins took 28.9862ms
[debug]           Load.loadUnit: defsScala took 0.0042ms
[debug] [Loading] Scanning directory C:\Univalle\4to semestre\Funcional\Talleres\Taller 4\Taller 4\project
[debug]             Load.loadUnit: mkEval took 6.1002ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Univalle\4to semestre\Funcional\Talleres\Taller 4\Taller 4\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5437 ms
[info] loading settings for project taller-4-build from idea.sbt ...
[debug]               Load.resolveProject(taller-4-build) took 2.2452ms
[debug]             Load.loadTransitive: finalizeProject(Project(id taller-4-build, base: C:\Univalle\4to semestre\Funcional\Talleres\Taller 4\Taller 4\project, plugins: List(<none>))) took 4.2515ms
[debug] [Loading] Done in C:\Univalle\4to semestre\Funcional\Talleres\Taller 4\Taller 4\project, returning: (taller-4-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1634.2219ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.8359ms
[debug]         Load.loadUnit(file:/C:/Univalle/4to%20semestre/Funcional/Talleres/Taller%204/Taller%204/project/, ...) took 1670.0429ms
[debug]       Load.apply: load took 1671.4118ms
[debug]       Load.apply: resolveProjects took 0.1111ms
[debug]       Load.apply: finalTransforms took 6.6935ms
[debug]       Load.apply: config.delegates took 0.4084ms
[debug]       Load.apply: Def.make(settings)... took 51.5166ms
[debug]       Load.apply: structureIndex took 21.3136ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from C:\Univalle\4to semestre\Funcional\Talleres\Taller 4\Taller 4\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6550.5888ms
[debug]     Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Univalle\4to semestre\Funcional\Talleres\Taller 4\Taller 4
[debug]       Load.loadUnit: mkEval took 0.345ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5137 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 27.1025ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Univalle\4to semestre\Funcional\Talleres\Taller 4\Taller 4, plugins: List(<none>))) took 30.1107ms
[debug] [Loading] Done in C:\Univalle\4to semestre\Funcional\Talleres\Taller 4\Taller 4, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 786.381ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.3993ms
[debug]   Load.loadUnit(file:/C:/Univalle/4to%20semestre/Funcional/Talleres/Taller%204/Taller%204/, ...) took 7356.2041ms
[debug] Load.apply: load took 7357.874ms
[debug] Load.apply: resolveProjects took 0.1395ms
[debug] Load.apply: finalTransforms took 15.8982ms
[debug] Load.apply: config.delegates took 0.2255ms
[debug] Load.apply: Def.make(settings)... took 36.6983ms
[debug] Load.apply: structureIndex took 16.3305ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to Taller 4 (in build file:/C:/Univalle/4to%20semestre/Funcional/Talleres/Taller%204/Taller%204/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55409 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55409, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Taller 4 (in build file:/C:/Univalle/4to%20semestre/Funcional/Talleres/Taller%204/Taller%204/)
[debug] > Exec(idea-shell, None, None)
